### Config expects version of tmux > 2.4
## man http://man.openbsd.org/OpenBSD-current/man1/tmux.1
## Tao of Tmux https://leanpub.com/the-tao-of-tmux/read#leanpub-auto-keybindings-1
## All of the plugins https://github.com/tmux-plugins

## Pass all of plugins
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run -b '~/.tmux/plugins/tpm/tpm'


# utf8 is on
set -q -g status-utf8 on
setw -q -g utf8 on

# Set the time in milliseconds for which tmux waits after an escape is input to determine 
# if it is part of a function or meta key sequences. The default is 500 milliseconds.
# http://superuser.com/a/252717/65504
set -s escape-time 0

# increase scrollback buffer size
set -g history-limit 50000

# tmux messages are displayed for 5 seconds
set -g display-time 5000

# Update the status line every interval seconds.
# By default, updates will occur every 15 seconds.
# A setting of zero disables redrawing at interval.
# refresh 'status-left' and 'status-right' more often
set -g status-interval 5

## upgrade $TERM
# Set the default terminal for new windows created in this session - the default value of 
# the TERM environment variable. For tmux to work correctly, this must be set 
# to ‘screen’, ‘tmux’ or a derivative of them.

# for 256 color mode 
# set -g default-terminal "screen-256color"

# 24 bit color in vim
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"
# must be added to .vimrc:
#      " Enable true color
#      if exists('+termguicolors')
#      let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
#      let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
#      set termguicolors
#      endif

# When enabled, focus events are requested from the terminal 
# if supported and passed through to applications running in tmux.
# focus events enabled for terminals that support them
set -g focus-events on

# Aggressively resize the chosen window. This means that tmux will resize the window 
# to the size of the smallest session for which it is the current window, rather than 
# the smallest session to which it is attached. The window may resize when the current 
# window is changed on another sessions; this option is good for full-screen programs 
# which support SIGWINCH and poor for interactive programs such as shells. 
setw -g aggressive-resize on

## PANES
set -g pane-border-bg colour235
set -g pane-border-fg colour238
set -g pane-active-border-bg colour236
set -g pane-active-border-fg colour51

## The STATUSBAR
set -g status-justify left
set -g status-position bottom
set -g status-bg colour234
set -g status-fg colour137
set -g status-attr dim
set -g status-right-length 90
set -g status-left-length 60

## The MESSAGING
set -g message-command-fg blue
set -g message-command-bg black
set -g message-attr bold
set -g message-fg colour232
set -g message-bg colour166

## The WINDOW MODE
setw -g clock-mode-colour colour135
setw -g mode-attr bold
setw -g mode-fg colour196
setw -g mode-bg colour238

## The WINDOW STATUS-Line
setw -g window-status-current-format " #F#I:#W#F "
setw -g window-status-current-fg colour11
setw -g window-status-current-bg colour238
setw -g window-status-current-attr bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g window-status-fg colour138
setw -g window-status-bg colour235
setw -g window-status-attr none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

# Highlight active window
set-window-option -g window-status-current-bg colour241

## Windows activity
set-option -g visual-bell off
# setw -g window-status-bell-attr bold
# setw -g window-status-bell-fg colour255
# setw -g window-status-bell-bg colour1
set-option -g visual-activity on
set-window-option -g monitor-activity on

set -g status-left '#[fg=colour245,bg=colour238,bold] #(echo -n "Mem: All/Used/Free/Avail") #[fg=blue,bold] #(free -hg | grep "Mem:" | tr -s " " | cut -d" " -f2-4,6)'
set -g status-right '#[fg=blue,bold]#(uptime) #[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
# set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# set split panes using '|' and '-'
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# reload config file from current location of the tmux.conf
bind r source-file ~/.tmux.conf

# switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# swap current pane with the next or previous one
bind > swap-pane -D
bind < swap-pane -U

# synchronize mode on and off
bind a setw synchronize-panes on
bind \\ setw synchronize-panes off

# Enable mouse mode (tmux version < 2.1)
set -g mouse on

# Enable mouse control (clickable windows, panes, resizable panes) - old ver - pass
#set -g mouse-select-window on
#set -g mouse-select-pane on
#set -g mouse-resize-pane on

# Mouse roll-scrolling
bind -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "select-pane -t =; send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "select-pane -t =; send-keys -M" "select-pane -t =; send-keys -M"

## Vi copypaste mode
# Prefix + [ - to enter in copymode
# v - for standart selection
# ctrl + v - for block selection 
set -g status-keys vi 
set-window-option -g mode-keys vi

# if-shell "test '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 4 \)'" \
#          'bind-key -Tcopy-mode-vi v send -X begin-selection\; send -X rectangle-toggle \
#           bind-key -Tcopy-mode-vi y send -X copy-selection-and-cancel'

# if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 4\) -o #{$TMUX_VERSION_MAJOR} -le 1' \
#          'bind-key -t vi-copy v begin-selection; \
#           bind-key -t vi-copy y copy-selection; \
#           bind-key -t vi-copy WheelUpPane halfpage-up; \
#           bind-key -t vi-copy WheelDownPane halfpage-down; \
#           bind-key -t vi-copy PPage page-up; \
#           bind-key -t vi-copy NPage page-down'

set-option -s set-clipboard off
bind-key -T copy-mode-vi v send -X begin-selection; send -X rectangle-toggle

# Set the time in milliseconds for which tmux waits after an escape is input to determine 
# if it is part of a function or meta key sequences. The default is 500 milliseconds.
# Lowers the delay time between the prefix key and other keys - fixes pausing in vim
set -sg escape-time 0

# If this option is set, tmux will generate xterm-style function key sequences; 
# these have a number included to indicate modifiers such as Shift, Alt or Ctrl.
set-option -gw xterm-keys on

# Allow multiple commands to be entered without pressing the prefix-key again in 
# the specified time milliseconds (the default is 500). Whether a key repeats may 
# be set when it is bound using the -r flag to bind-key. Repeat is enabled for 
# the default keys bound to the resize-pane command.
set -sg repeat-time 300

# When enabled, focus events are requested from the terminal if supported and passed 
# through to applications running in tmux.
# useful for vim
set -s focus-events on

## DISPLAY settings

# start windows numbering at 1
set -g base-index 1

# make pane numbering consistent with windows
setw -g pane-base-index 1

# rename window to reflect current program
setw -g automatic-rename on

# renumber windows when a window is closed
set -g renumber-windows on

# set terminal title
set -g set-titles on

#used to set the window title if set-titles is on. Formats are expanded, see the FORMATS section. (http://man.openbsd.org/OpenBSD-current/man1/tmux.1#FORMATS)
set -g set-titles-string '#h ❐ #S ● #I #W'

# slightly longer pane indicators display time
set -g display-panes-time 800

# redraw status line every 2 seconds
set -g status-interval 2

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history
